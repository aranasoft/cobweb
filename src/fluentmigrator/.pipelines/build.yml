trigger:
  paths:
    include:
      - "src/fluentmigrator"
  branches:
   include:
      - "*"

pool:
  vmImage: 'windows-latest'

steps:
- task: PowerShell@1
  displayName: 'Set Branch Quality'
  inputs:
    scriptType: inlineScript
    inlineScript: |
      if ($env:BUILD_SOURCEBRANCHNAME -eq "Develop"){
        Write-Output ("##vso[build.updatebuildnumber]" + $env:BUILD_BUILDNUMBER+"-beta")
      }
      else 
      {
        if ($env:BUILD_SOURCEBRANCHNAME -ne "master"){
          Write-Output ("##vso[build.updatebuildnumber]" + $env:BUILD_BUILDNUMBER+"-alpha")
        }
      }
- task: DotNetCoreCLI@2
  displayName: 'dotnet restore'
  inputs:
    command: 'restore'
    projects: 'src/fluentmigrator'
    feedsToUse: 'select'
- task: DotNetCoreCLI@2
  displayName: 'dotnet build'
  inputs:
    command: 'build'
    projects: 'src/fluentmigrator'
    arguments: '--no-restore --configuration $(Build.Configuration)'
- task: DotNetCoreCLI@2
  enabled: false
  displayName: 'dotnet test'
  inputs:
    command: 'test'
    projects: 'src/fluentmigrator'
    arguments: '--no-restore --no-build --configuration $(Build.Configuration)'
- task: DotNetCoreCLI@2
  displayName: 'dotnet pack'
  inputs:
    command: 'pack'
    projects: 'src/fluentmigrator'
    arguments: '--no-restore --no-build --configuration $(Build.Configuration) --output $(Build.ArtifactStagingDirectory)'
- task: PublishBuildArtifacts@1
  displayName: 'publish packages'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'nuget'
    publishLocation: 'Container'
